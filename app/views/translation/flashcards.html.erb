
<div class="flip-container" >
	<div class="flipper">
		<div class="card">
			<!-- front content -->
	 </div>
		<div class="back">
			</div>
			<!-- back content -->
		<div class="smallcard">
		some stuff
		</div>
		<div class="smallcard2">
		other stuff
		</div>
	</div>
	<button id="nextBtn">next</button>
</div>







<div class="flashcardInputWrap">

	<textarea id="pasteList" name="name" rows="30" cols="80"></textarea>
		<button class="flashcardInput">Submit</button>
		<button id="">Paste</button>



		<form class="flashcardForm">

			<select id="oneSelect2" name="language" onchange="selectFilter()">
				 <option selected class="eng">English</option>
				 <option>French</option>
				 <option>Spanish</option>
				 <option>German</option>
				 <option>Arabic</option>
				 <option>Italian</option>
				 <option>Portuguese</option>
		 </select>
		 <div class="swap">
			 <span><img id="swapLang1" src="https://img.icons8.com/ultraviolet/40/000000/synchronize.png"></span>
		 </div>
			<select id="twoSelect2" name="language">

				<option class="alt">English</option>
				<option selected class="alt2">French</option>
				<option class="alt2">Spanish</option>
				<option class="alt2">German</option>
				<option class="alt2">Arabic</option>
				<option class="alt2">Italian</option>
				<option class="alt2">Portuguese</option>
		 </select>
		</form>
</div>




<script>
$(document).ready(function() {
let card = document.getElementsByClassName("card")[0];
const flip = document.getElementsByClassName("flipper")[0];
const back = document.getElementsByClassName("back")[0];
const smallcard = document.getElementsByClassName("smallcard")[0];
const smallcard2 = document.getElementsByClassName("smallcard2")[0];
const box = document.getElementsByClassName("flashtextbox")[0];
const button = document.getElementsByClassName("flashcardInput")[0];
const oneSelect = document.getElementById("oneSelect2");
const twoSelect = document.getElementById("twoSelect2");
const wrap = document.getElementsByClassName("flashcardInputWrap")[0];
const next = document.getElementById("nextBtn");
let bench = 0
let ndex;

back.addEventListener("click", doThis2, false);
smallcard.addEventListener("click", doThis3, false);
button.addEventListener('click', doThis4, false);
function doThis() {
 console.log("its on");
 // this.className += " hover";
 // flip.style.transform = "rotateX(180deg)";
 // card.style.transform = "rotateX(180deg)";
}

function doThis2() {

 // this.className += " hover";

 flip.style.transform = "rotateX(0deg)";
 card.style.transform = "rotateX(0deg)";
}
function doThis3() {
 $(".smallcard").animate({

	  height: '300px',
		top: '50%',
		left: '45%',
		width: '500px',
		backgroundSize: '100%',
		marginLeft: "-250px"
});
 // $(".smallcard").animate({height: '300px'});
  // $(".smallcard").animate({top: '50%'});

}


function doThis4() {
	let filarr = document.getElementById("pasteList").value.split("\n")
    console.log(typeof filarr)
  let i;
  let arr = []
  // let arr2 = []
  let ks = filarr.filter(function (el) {
    return el != "";
    });
    let jt = []
  for (i = 0; i < ks.length; i++) {
    jt[i] = ks[i] + '<br />';
    // if (arr.length < 26) {
   arr.push((i + 1) + ". " + jt[i]);
 // } else { arr2.push((i + 31) + ". " + ks[i]) ; }
  };


  const str = oneSelect.options[oneSelect.selectedIndex].text;
  const str2 = twoSelect.options[twoSelect.selectedIndex].text;
  const collins = "https://www.collinsdictionary.com/dictionary/";
  const langlink = collins + str.toLowerCase() + "-" + str2.toLowerCase() + "/";
  let langOne = str + " Female"
  let langTwo =  str2 + " Female"
  let en = "US English Male"
  let gn = "Deutsch Female"
  if (str[0] == "E") {
    langOne = en
  } else if (str2[0] == "E") {
      langTwo = en
    };
  if (str[0] == "G") {
      langOne = gn
    } else if (str2[0] == "G") {
        langTwo = gn
    };




  enfrlinks = []
  arr2 = [] //this will be based on user input language choice,  so we only use one line for it
  for (i = 0; i < ks.length; i++) {
    arr2.push(ks[i]);
    word = ks[i].replace(/\s+/g, '-');
    enfrlinks.push(langlink + word);
  }
	$.ajax({

   url: "flash",
   data: { data_value: enfrlinks },
   success: function(response)
      { if (response) {
          let result = $(response).find(".arrList2");

				  // let oneWord = $(result).children().first()
					let allWords = $(result).children()
					let oneWord = $(allWords).get(0)
			     	$(".card").append(allWords)
						$(allWords).css("display","none");
						$(oneWord).css("display","block");
						$(oneWord).addClass("onCard")
						console.log(allWords)
						wh = $(allWords).get(1)
						smallcard.innerHTML = $(wh).text()

						//.css("display", "block");
					// $(".card").append(oneWord)
					// $(allWords).css("display", "block");
					// $(oneWord).css("display", "block");

        card.addEventListener("click", function () {listenerFunc(oneWord)}, false);
				next.addEventListener('click', nextFunc, false);
        bench = 0


				 $("all words").css("display", "none")
					$("all words").first()
					//put that word in the center of card
			 } }
    });
}

function listenerFunc(oneWord) {
	flip.style.transform = "rotateX(-180deg)";
	// card.style.transform = "rotateX(-180deg)";
	 i =  $(oneWord).index(".word");

	 console.log(i);
  // g = i + 1;
	// word = document.getElementsByClassName("word");
  // word[g].style.display = "block";
	// word[i].style.display = "none";
	flipdef = document.getElementsByClassName("defn");
	console.log(oneWord[i]);
	flipdef[i].style.display = "block"
	 back.innerText = flipdef[i].innerText
}
function nextFunc() {
	recurse(0)

// var current;


  //   for (var s = 0; s < 10; s++) {
	//
	// 		 console.log(card.children);
	// 		if ( (card.children[s].className == "word lst onCard") || (card.children[s].className == "defn lst onCard") ){
	// 		  $(card.children[s]).removeClass("onCard");
	// 			$(card.children[s + 1]).addClass("onCard");
  //      console.log(card.children[s + 1].className) //
	// 		 console.log(s)
	// 		 console.log(card.children.length) //.addClass("onCard");
  //         smallcard2.innerHTML = $(card.children[s + 2]).text()
  //      // card.innerHTML = card.children[i + 1].html  //i take away the children here
  //    return;
  //   // }
	// } else {
  //  console.log(s)
	//  console.log(card.children[s].className + "in else")
	// }
	//
	//
  // }



}


function big() {

	$(".smallcard").animate({

		 height: '300px',
		 top: '50%',
		 left: '45%',
		 width: '500px',
		 backgroundSize: '100%',
		 marginLeft: "-250px",
		 zIndex: 3
	});


}



function small() {
setTimeout( function(){
$(".smallcard").css({

	 height: '100px',
	 top: '160%',
	 left: '135%',
	 width: '200px',
	 backgroundSize: '100%',
	 marginLeft: "-250px",
	 zIndex: 3
});

}, 500)
}
function recurse(index) {
	// for (var s = 0; s < 10; s++) {

	// 	if ( (card.children[s].className == "word lst onCard") || (card.children[s].className == "defn lst onCard") ){
	// 		$(card.children[s]).removeClass("onCard");
	// 		$(card.children[s + 1]).addClass("onCard");     //this doesnt happen fast enough
	// 	 console.log(card.children[s + 1].className) //
	// 	 console.log(s)
	// 	 console.log(card.children.length) //.addClass("onCard");
	// 			smallcard2.innerHTML = $(card.children[s + 2]).text()
	// 	 // card.innerHTML = card.children[i + 1].html  //i take away the children here
	//  return;
   ndex = index
	if (index >= (card.children.length - 2)) {
		$(card.children[index]).removeClass("onCard");
		$(card.children[index]).css("display", "none");
   console.log("this should be gone now" +  card.children[index].innerHTML + index)
 	  index = 0;
	  $(card.children[index]).addClass("onCard");


		big();
		setTimeout(function(){
		index = 0;
		small()
		setTimeout(function(){smallcard.innerHTML = $(card.children[1]).text()}, 500)

		$(card.children[index]).css("display", "block");
	 // recurse(0);
       }, 900);
 } else if ( (card.children[ndex].className == "word lst onCard" || card.children[ndex].className == "defn lst onCard") && (index < (card.children.length - 3) ) ) {
		console.log(index);
		smallcard2.innerHTML = $(card.children[index + 2]).text();
	 $(card.children[index]).removeClass("onCard");
   $(card.children[index + 1]).addClass("onCard");
        big();

	 setTimeout(function(){
		 small();
		 setTimeout(function(){smallcard.innerHTML = $(card.children[ndex + 2]).text()}, 500)
		 $(card.children[index + 1]).css("display", "block");
		 $(card.children[index]).css("display", "none");
    }, 900)

	 console.log(index + 1 + "the last")
	 console.log("size is " + card.children.length )



	 return;

 } else if ( (card.children[ndex].className == "word lst onCard" || card.children[ndex].className == "defn lst onCard") && (index == (card.children.length - 3)) )  {
		console.log("bop");
	 $(card.children[index]).removeClass("onCard");
	 console.log(card.children[index].innerHTML)
   // $(card.children[index + 1]).addClass("onCard");

	 console.log(index + 1 + "the finish")
	 console.log("size is " + card.children.length )

	 big();
	 setTimeout(function(){
   small()
	 setTimeout(function(){smallcard.innerHTML = $(card.children[0]).text()}, 500)
	 $(card.children[index]).css("display", "none");
	 $(card.children[index + 1]).css("display", "block");
 }, 900)
	 return;

 } else if (!(card.children[ndex].className == "word lst onCard" || card.children[ndex].className == "defn lst onCard") && (index < (card.children.length - 2))) {

		 // console.log("ending" + index)
		 // console.log(card.children[index])
	   recurse(index + 1);
		 console.log("running again");
		 return;
 }

}












});
</script>
