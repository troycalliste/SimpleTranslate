
 <form>

   <select id="oneSelect1" name="language" onchange="selectFilter()">
      <option selected class="eng">English</option>
      <option>French</option>
      <option>Spanish</option>
      <option>German</option>
      <option>Arabic</option>
      <option>Italian</option>
      <option>Portuguese</option>
  </select>
  <div class="swap">
    <span><img id="swapLang1" src="https://img.icons8.com/ultraviolet/40/000000/synchronize.png"></span>
  </div>
   <select id="twoSelect1" name="language">

     <option class="alt">English</option>
     <option selected class="alt2">French</option>
     <option class="alt2">Spanish</option>
     <option class="alt2">German</option>
     <option class="alt2">Arabic</option>
     <option class="alt2">Italian</option>
     <option class="alt2">Portuguese</option>
  </select>
</form>

 <div class="pasteBox">
<button id="pasteBtn">Paste</button>
   <textarea id="pasteTxt" name="name" rows="30" cols="80" ></textarea>


     <button class="btnnn">Submit</button>



 </div>
 <div class="centerList">
   <div class="colOne">
 </div>

 </div>

<script>
$(document).ready(function() {
let sub = document.getElementsByClassName('clc')[0];
let box = document.getElementsByClassName('colOne')[0];
let box2 = document.getElementsByClassName('colTwo')[0];
let red = document.getElementsByClassName('pasteBox')[0];
const btnnn = document.getElementsByClassName('btnnn')[0];
const oneSelect = document.getElementById("oneSelect1");
const twoSelect = document.getElementById("twoSelect1");
const textbox = document.getElementById("pasteBtn");
let toggled1 = false;
let toggled2 = false;
let toggle = false;
// Opera 8.0+

var isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;

// Firefox 1.0+
var isFirefox = typeof InstallTrigger !== 'undefined';

// Safari 3.0+ "[object HTMLElementConstructor]"
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));

// Internet Explorer 6-11
var isIE = /*@cc_on!@*/false || !!document.documentMode;

// Edge 20+
var isEdge = !isIE && !!window.StyleMedia;

// Chrome 1 - 71
var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);

// Blink engine detection
var isBlink = (isChrome || isOpera) && !!window.CSS;



function chrome() {
  if (!(isChrome)) {
  textbox.style.display = "none"
} else {
  textbox.style.display = "inline-block"
}
// console.log(isChrome)
// var output = 'Detecting browsers by ducktyping:<hr>';
// output += 'isFirefox: ' + isFirefox + '<br>';
// output += 'isChrome: ' + isChrome + '<br>';
// output += 'isSafari: ' + isSafari + '<br>';
// output += 'isOpera: ' + isOpera + '<br>';
// output += 'isIE: ' + isIE + '<br>';
// output += 'isEdge: ' + isEdge + '<br>';
// output += 'isBlink: ' + isBlink + '<br>';
// console.log(output);
}
chrome();

btnnn.addEventListener('click', parseTxt, false);
textbox.addEventListener('click', pasteWrap, false);
function pasteWrap() {
  if (isChrome) {
  paste(textbox);
  console.log("clicked");
  }


}
async function paste(input) {
  const text = await navigator.clipboard.readText();
  document.getElementById("pasteTxt").value = text;
}


function parseTxt() {

  // let filarr  = $('textarea').val().split("\n"); // creates new element at line break, doesn't add one
 btnnn.removeEventListener('click', parseTxt, false);

  let filarr = document.getElementById("pasteTxt").value.split("\n")
    console.log(typeof filarr)
  let i;
  let arr = []
  // let arr2 = []
  let ks = filarr.filter(function (el) {
    return el != "";
    });
    let jt = []
  for (i = 0; i < ks.length; i++) {
    jt[i] = ks[i] + '<br />';
    // if (arr.length < 26) {
   arr.push((i + 1) + ". " + jt[i]);
 // } else { arr2.push((i + 31) + ". " + ks[i]) ; }
  };


  const str = oneSelect.options[oneSelect.selectedIndex].text;
  const str2 = twoSelect.options[twoSelect.selectedIndex].text;
  const collins = "https://www.collinsdictionary.com/dictionary/";
  const langlink = collins + str.toLowerCase() + "-" + str2.toLowerCase() + "/";
  let langOne = str + " Female"
  let langTwo =  str2 + " Female"
  let en = "US English Male"
  let gn = "Deutsch Female"
  if (str[0] == "E") {
    langOne = en
  } else if (str2[0] == "E") {
      langTwo = en
    };
  if (str[0] == "G") {
      langOne = gn
    } else if (str2[0] == "G") {
        langTwo = gn
    };




  enfrlinks = []
  arr2 = [] //this will be based on user input language choice,  so we only use one line for it
  for (i = 0; i < ks.length; i++) {
    arr2.push(ks[i]);
    word = ks[i].replace(/\s+/g, '-');
    enfrlinks.push(langlink + word);
  }
  // red.innerHTML = arr.join(" ")
  // box2.innerHTML = arr2.join(" ")
  // .innerHTML = "j"
  // red.style.display = "none";
  // box2.style.marginTop = "0px"
  console.log(enfrlinks)
  $.ajax({

   url: "flash",
   data: { data_value: enfrlinks, arr2: arr2 },
   success: function(response)
      { if (response) {
          let result = $(response).find(".arrList");
          console.log(result + "woo");
          // result2 = $(response).find(".innerList");
          // refContain.style.display = "block";
          // newclss = document.getElementsByClassName("topnav")[0].className = "topnav " + str2.toLowerCase();
  // $(".topnav").css("background-size", "2400px 1300px")
  // $(".topnav").css("background-position", " center")
         $(".pasteBox").empty().append(result)
         $(".centerList").append(result)
         }
         const dbtn = document.getElementById("defBtn");
         const wbtn = document.getElementById("wordBtn");
         wbtn.addEventListener('click', hideWord);
         dbtn.addEventListener('click', hideDef);
         $( ".icn" ).click(
         function() {
           console.log("something");
           indx = $(this).index(".icn");
           spk = $(".sp").eq(indx).text();
           if (indx % 2 == 0) {
             responsiveVoice.speak(spk, langTwo)
           } else {
             responsiveVoice.speak(spk, langOne)
          };
         });


      },
    error: function () {
        console.log("error");
        $(".pasteBox").empty().append("unknown error")
      }
  });


}
function hov(liveClass) {

console.log("its repeating");
  $( liveClass ).hover(
  function() {
   // $(liveClass).children().addClass("hoverDef");
   $(liveClass).children(".sp").css("visibility","visible");

  }, function() {
     // $(liveClass).children()
     // $(liveClass).removeClass("hoverDef")
     $(liveClass).children(".sp").css("visibility","hidden");
     }
);
}


function addLis(classname) {
for (var i = 0; i < classname.length; i++) {
    let live = classname[i]
    classname[i].addEventListener('mouseover', function () {hov(live)}, false);
}
}

function remLis(classname) {
for (var i = 0; i < classname.length; i++) {
  let live = classname[i]
    // $().off()
    $(live).replaceWith($(live).clone());

}
$( ".icn" ).on( "click",
function() {
  str = oneSelect.options[oneSelect.selectedIndex].text;
  str2 = twoSelect.options[twoSelect.selectedIndex].text;
   langOne = str + " Female"
   langTwo =  str2 + " Female"

  console.log("something");
  indx = $(this).index(".icn");
  spk = $(".sp").eq(indx).text();
  console.log(spk)
  // && (!responsiveVoice.isPlaying()
  if (indx % 2 == 0 ) {
    responsiveVoice.speak(spk, langTwo)
    return
  } else {
    responsiveVoice.speak(spk, langOne)
    return
 };
});
}



function hideWord() {
  defn = document.getElementsByClassName("defn");
  if (toggled2 == false) {
  $(".word").css("display","none");
  $("#wordBtn").text("show word");
  toggled2 = true;
   addLis(defn);
   $(".hoverNotice").css("display","block");


} else {
  $(".word").css("display","inline-block");
  $("#wordBtn").text("hide word");
  toggled2 = false;
  console.log(toggled2);
  remLis(defn);
  $(".hoverNotice").css("display","none");
}
 return
}
function hideDef() {
  word = document.getElementsByClassName("word");
  // defn = document.getElementsByClassName("defn");
  if (toggled1 == false) {
 $(".defn").css("display","none");
 $("#defBtn").text("show definition");
 toggled1 = true
 addLis(word);
 $(".hoverNotice").css("display","block");
} else {
$(".defn").css("display","inline-block");
$("#defBtn").text("hide definition");
toggled1 = false;
remLis(word);
$(".hoverNotice").css("display","none");
}
 return
}



// var x = document.getElementById("pets").options[2].disabled = true;







});
//well loop through the array , keep making requests and keep appending
// actually well just send the array to ruby controller and loop it there
$('#swapLang1').click(function () {
    let v1 = $('#oneSelect1').val(),
        v2 = $('#twoSelect1').val();
    $('#oneSelect1').val(v2);
    $('#twoSelect1').val(v1);

});
function selectFilter() {
// var x = document.getElementById("oneSelect1").value;

oneSelect = document.getElementById("oneSelect1");
str = oneSelect.options[oneSelect.selectedIndex].text
 if (str == "English") {
 $('.alt2').prop('disabled', false)
 $('.alt').prop('disabled', true)
 } else {
  $('.alt2').prop('disabled', true)
  $('.alt').prop('disabled', false)
  console.log("englishhh")
 };
}



// restclient is better
</script>
